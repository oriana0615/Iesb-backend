// Tipos null
let telefone = null // ausência de valor

// Tipo undefined e NaN
let teste = 10 / "olá"
console.log(teste)

// Tratamento de dados (String)
let texto = "Gustavo Clay"
// .length // quantidade de caracteres do texto 
console.log(texto.length)
// texto em caixa alta
console.log(texto.toUpperCase())
//texto em caixa baixa
console.log(texto.toLowerCase())
// replace substituição
let valor = "10,50,"
console.log(valor)
valor = valor.replace(",", ".")
console.log(valor)


// tratamento de dados (number)
let numero = 10.777777777777777777777777777777
// fixar o numero de casas do numero flutuante
console.log(numero.toFixed(2))

// transformando float para inteiro
console.log(Number.parseInt(numero))

let numeroIntero = 10

// transformando inteiro para float
console.log(Number.parseFloat(numeroIntero).toFixed(2))

let valorEmDolar = 10.54

// console.log(valorEmDolar.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' }))

// console.log(valorEmDolar.toLocaleString('pt-BR', { style: 'currency', currency: 'USD' }))


let idadeUser = "20"
console.log(Number(idadeUser))

console.log(Math.PI)



SEGUNDA REVISION 

JS
    Lado do Cliente
    Árvore de elementos (Vanila ou Frameworks)
    
    Lado do Servidor (NodeJS)

    Variáveis
        - var, let e const
        - = atribuição
        - Tipagem fraca
        - Tipos:
            string
            number (int e float)
            boolean
            array
                metodos
            object
                metodos
            null -> ausencia de valor
            undefined -: nao inicializado
            NaN -> Não é um numero (ex: 10/"olá")

    Tratamento de Dados
        String
            Concatenação
            ""
            ''
            `` (Template String)
            .length
            .toUpperCase()
            .toLowerCase()
            .replace()
            String
            
        Number
            Number.parseInt()
            Number.parseFloat()
            Number() string para numero
            String() numero para string
            .toFixed(2)
            .toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'})
            .toLocaleString('pt-BR', {style: 'currency', currency: 'USD'})

    Exibição de mensagens
        console.log(info, error, warn)

    Operadores Aritméticos
        + - * / % **
        precedência
            ()
            **
            * / %
            + -
        Math 

    Operadores relacionais
        > < >= <= == !=
        === !==

    Operadores lógicos
        ! negação
        && E
        || OU
        
        
    Condições
        if else
        ternário ? :

        switch(condicao) {
            case valor1:
                comando
                break
            default:
                break
        }

    Repetição

        // Testa a condição no inicio
        let contador = 0
        while (condicao) {
            comando
            contador++
        }

        // Testa a condição no fim
        let contador = 0
        do {
            comando
            contador++
        } while (condicao)

        // laço for
        // inicialização: condição: incremento
        for (let c = 1; c < 5 ; c++){
            comando
        }

    Funções
        function executa() {
            console.log("TESTE")
        }

        function soma(n1, n2) {
            return n1 + n2;
        }

        const soma = (n1, n2) => {
            return n1 + n2;
        }

        const soma = (n1,n2) => n1 + n2

 